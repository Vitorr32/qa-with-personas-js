version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: my-app-db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: "123"
      POSTGRES_DB: qa_with_personas
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      # Check against the actual app database to avoid "database 'myuser' does not exist" noise
      test: ["CMD-SHELL", "pg_isready -U myuser -d qa_with_personas"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Optional: expose locally for admin tools
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: my-app-backend
    # Load sensitive env values from a local file (not committed)
    env_file:
      - ./.env.prod
    environment:
      NODE_ENV: production
      DB_USERNAME: myuser
      DB_HOST: db
      DB_NAME: qa_with_personas
      DB_PASSWORD: "123"
      DB_PORT: 5432
      DB_SYNC_ON_BOOT: "true"
      OPENAI_MODEL: "gpt-4"
      OPENAI_ANALYSIS_MODEL: "gpt-4"
      OPENAI_FILE_TTL_SECONDS: "3600"
      FRONTEND_PORT: 80
      PORT: 5000
      # Not strictly required when front proxies, but harmless
      FRONTEND_URL: http://localhost
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "5000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: my-app-frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:5000
    depends_on:
      - backend
    ports:
      - "80:80"

volumes:
  postgres_data:
